{"version":3,"sources":["services/blogs.js","reducers/blogsReducer.js","reducers/notificationReducer.js","components/Blog.js","components/BlogsList.js","services/login.js","services/users.js","reducers/userConstant.js","reducers/loginReducer.js","components/Togglable.js","components/LoginForm.js","components/Notification.js","reducers/usersReducer.js","components/Users.js","components/blogForm.js","App.js","store.js","index.js"],"names":["token","blogs","getAll","axios","get","then","response","data","setToken","newToken","concat","addNewBlog","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","arguments","addLike","_ref2","_callee2","id","respo","_context2","put","_x2","_x3","removeBlog","_ref3","_callee3","resp","_context3","delete","status","_x4","blogsReducer","state","length","undefined","action","type","loading","items","nblog","console","log","likedBlog","map","anecs","filter","st","failure","addNotification","message","setNotification","timeToShow","dispatch","setTimeout","notificationReducer","Blog","withRouter","props","blog","_useState","useState","_useState2","slicedToArray","history","useHistory","from","useLocation","pathname","react_default","createElement","Card","style","width","Body","Title","title","Subtitle","className","author","Text","Link","href","url","Button","onClick","push","handleLikeBtn","Badge","variant","likes","creatore","handleRemoveBtn","ListGroup","comments","u","ListGroupItem","key","Form","inline","Control","placeholder","mapDispatchToProps","blogService","initializeBlogs","success","error","BlogList","connect","ownProps","user","location","activeKey","setActiveKey","blg","useEffect","fetchData","changedBlog","find","b","objectSpread","_ref4","blogId","isCreator","username","failur","Accordion","index","Toggle","as","Header","eventKey","actKey","react_router_dom","to","Collapse","react_router","exact","path","render","_ref5","match","components_Blog","params","services_login","login","credential","services_users","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","JSON","parse","localStorage","getItem","initialState","logIn","loggedUser","loginService","loginReducer","window","setItem","stringify","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLable","children","mapStateToDispatch","handleLogin","event","password","loggedUserJSON","preventDefault","target","value","replace","t0","components_Togglable","onSubmit","Group","Label","name","notification","Alert","usersReducer","users","User","Footer","actionCreators","userService","toString","varian","Users_User","createBlog","BlogForm","addBlog","e","AuthButton","logout","PrivateRoute","rest","objectWithoutProperties","assign","logOut","clear","blogFormRef","createRef","exp","components_Notification","Navbar","bg","expand","Brand","text","class","NavItem","App_AuthButton","preUser","components_LoginForm","App_PrivateRoute","blogForm","BlogsList","components_Users","reducer","combineReducers","blogReducer","notificaionReducer","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8aeefdad.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\nconst setToken = newToken => { \n   token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst addNewBlog=async(newObject)=>{\n  const config={\n  headers: { Authorization: token }, \n      }\n    \n  const response = await axios.post(baseUrl, newObject, config)  \n  return response.data\n      \n}\n\nconst addLike=async(id,newObject)=>{\n     const respo=await axios.put(`${baseUrl}/${id}`,newObject)\n          return respo.data\n}\n\nconst removeBlog=async(id)=>{\n  const resp = await axios.delete(`${baseUrl}/${id}`)\n   return resp.status\n}\nexport default { getAll,setToken,addNewBlog,addLike,removeBlog }","import blogService from \"../services/blogs\";\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n  //console.log(\"from reduce\", action.type, action.data);\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return {\r\n        loading: true\r\n      };\r\n    case \"GETBLOG_SUCCESS\":\r\n      return {\r\n        items: action.blogs\r\n      };\r\n    case \"ADD_BLOG\":\r\n      return state.concat(action.data.nblog);\r\n    case \"ADD_LIKE\":\r\n      console.log(\"states from add like\", state);\r\n      console.log(action.data.likedBlog);\r\n      return state.items.map(anecs =>\r\n        anecs.id !== action.data.likedBlog.id ? anecs : action.data.likedBlog\r\n      );\r\n    case \"DEL_BLOG\":\r\n      return state.items.filter(st => st.id !== action.data.id);\r\n    case \"GETALL_FAILURE\":\r\n      return {\r\n        failure: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const initializeBlogs = () => {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    blogService.getAll().then(\r\n      blogs => dispatch(success(blogs)),\r\n      error => dispatch(failure(error))\r\n    );\r\n    function request() {\r\n      return { type: \"INIT_BLOGS\" };\r\n    }\r\n    function success(blogs) {\r\n      return { type: \"GETBLOG_SUCCESS\", blogs };\r\n    }\r\n    function failure(error) {\r\n      return { type: \"GETALL_FAILURE\", error };\r\n    }\r\n  };\r\n};\r\n\r\nexport const createBlog = blog => {\r\n  return async dispatch => {\r\n    const nblog = await blogService.addNewBlog(blog);\r\n    dispatch({\r\n      type: \"ADD_BLOG\",\r\n      data: { nblog }\r\n    });\r\n  };\r\n};\r\n\r\nexport const addLike = blog => {\r\n  return async dispatch => {\r\n    const likedBlog = await blogService.addLike(blog.id, blog);\r\n    dispatch({\r\n      type: \"ADD_LIKE\",\r\n      data: { likedBlog }\r\n    });\r\n  };\r\n};\r\nexport const removeBlog = id => {\r\n  return async dispatch => {\r\n    const delBlog = await blogService.removeBlog(id);\r\n    dispatch({\r\n      type: \"DEL_BLOG\",\r\n      data: { id }\r\n    });\r\n  };\r\n};\r\n\r\nexport default blogsReducer;\r\n","const initialState = null;\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_NOTIFICATION\":\r\n      return action.message;\r\n    case \"REMOVE_NOTIFICATION\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addNotification = message => {\r\n  return {\r\n    type: \"ADD_NOTIFICATION\",\r\n    message\r\n  };\r\n};\r\nexport const removeNotification = () => {\r\n  return {\r\n    type: \"REMOVE_NOTIFICATION\",\r\n    message: \"\"\r\n  };\r\n};\r\nexport const setNotification = (message, timeToShow) => {\r\n  return async dispatch => {\r\n    dispatch(addNotification(message));\r\n    setTimeout(() => dispatch(removeNotification()), timeToShow * 1000);\r\n  };\r\n};\r\nexport default notificationReducer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"react-bootstrap\";\r\n\r\nimport { withRouter, useHistory, useLocation } from \"react-router-dom\";\r\nconst BlogView = props => {\r\n  const blog = props.blog;\r\n  const [show, setShow] = useState(true);\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: \"solid\",\r\n    borderWidth: 1,\r\n    marginBottom: 5,\r\n    hover: \"red\"\r\n  };\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/blogs\" } };\r\n  const showName = { display: show ? \"none\" : \"\" };\r\n  const showAll = { display: show ? \"\" : \"none\" };\r\n  const toggleVisibility = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"50rem\" }}>\r\n      <Card.Body>\r\n        <Card.Title>{blog.title} </Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">{blog.author}</Card.Subtitle>\r\n        <Card.Text>{blog.title}</Card.Text>\r\n        <Card.Link href={blog.url}>{blog.url}</Card.Link>\r\n        <br />\r\n        <Button\r\n          onClick={() => {\r\n            history.push(from);\r\n            props.handleLikeBtn(blog.id);\r\n          }}\r\n        >\r\n          Like{\" \"}\r\n        </Button>\r\n        like <Badge variant=\"light\">{blog.likes}</Badge>\r\n        {props.creatore && (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(from);\r\n              props.handleRemoveBtn(blog.id);\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        )}\r\n        <ListGroup className=\"list-group-flush\">\r\n          {blog.comments.map(u => (\r\n            <ListGroupItem key={u.id}>{u.comments}</ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n        <Form inline>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"add comment\"\r\n            className=\"mr-sm-6\"\r\n          />\r\n          <Button variant=\"outline-dark\" type=\"submit\">\r\n            comment\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nconst Blog = withRouter(BlogView);\r\nexport default Blog;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  Route,\n  Redirect,\n  Link,\n  useHistory,\n  useLocation,\n  withRouter\n} from \"react-router-dom\";\n\nimport { Accordion, Card } from \"react-bootstrap\";\n\nimport { addLike, removeBlog, initializeBlogs } from \"../reducers/blogsReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\n\nimport Blog from \"./Blog\";\n\nconst BlogsListView = props => {\n  let history = useHistory();\n  let location = useLocation();\n  const [activeKey, setActiveKey] = useState(\"0\");\n  let { from } = location.state || { from: { pathname: \"/blogs\" } };\n  let blg = props.blogs ? props.blogs : { items: [] };\n  /* blg = props.items.sort((a, b) =>\n    a.likes < b.likes ? 1 : b.likes < a.likes ? -1 : 0\n  );*/\n\n  useEffect(() => {\n    if (props.user !== null) {\n      if (!blg.items) {\n        const fetchData = async () => {\n          await props.initializeBlogs();\n        };\n        fetchData();\n      }\n    }\n\n    //console.log(\"from effect\");\n    //props.initializeBlogs();\n  }, []);\n\n  const handleLikeBtn = async id => {\n    let blog = blg.items.find(b => b.id === id);\n    console.log(\"from handle like\", blog);\n    const changedBlog = { ...blog, likes: blog.likes + 1 };\n    await props.addLike(changedBlog);\n    props.setNotification(`you liked ${blog.title}`, 5);\n\n    history.push(from);\n    //setTimeout(() => {}, 6);\n    props.initializeBlogs();\n  };\n\n  const handleRemoveBtn = async blogId => {\n    let blog = blg.items.find(b => b.id === blogId);\n    console.log(blogId, \"from remove btn\");\n    await props.removeBlog(blogId);\n    props.setNotification(`you remove ${blog.title}`, 5);\n    history.push(from);\n    props.initializeBlogs();\n  };\n\n  const blogById = id => {\n    console.log(blg);\n    let blog = blg.items.find(b => b.id === id);\n    return blog;\n  };\n  const isCreator = id => {\n    let blog = blg.items.find(b => b.id === id);\n    return props.user.username === blog.user[0].username;\n  };\n  const setActiveKeyOnSelect = actKey => {\n    //actKey.preventDefault();\n    // console.log(actKey);\n    if (actKey === activeKey) actKey = -1;\n    setActiveKey(actKey);\n  };\n  return (\n    <div>\n      {props.blogs.loading && <em>loading blogs...</em>}\n      {props.blogs.failur && (\n        <span className=\"text-danger\">ERROR: {props.blogs.error}</span>\n      )}\n      {props.blogs.items && (\n        <div>\n          <Accordion activeKey={activeKey}>\n            {props.blogs.items.map((blog, index) => (\n              <Card key={blog.id}>\n                <Accordion.Toggle\n                  as={Card.Header}\n                  eventKey={index}\n                  onClick={() => {\n                    setActiveKeyOnSelect(index);\n                  }}\n                >\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index}>\n                  <Card.Body>\n                    <Route\n                      exact\n                      path=\"/blogs/:id\"\n                      render={({ match }) => (\n                        <Blog\n                          blog={blogById(match.params.id)}\n                          handleLikeBtn={handleLikeBtn}\n                          handleRemoveBtn={handleRemoveBtn}\n                          creatore={isCreator(match.params.id)}\n                        />\n                      )}\n                    />\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            ))}\n          </Accordion>\n        </div>\n      )}\n    </div>\n  );\n}; //end of blog list component\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  };\n};\nconst mapDispatchToProps = {\n  addLike,\n  removeBlog,\n  setNotification,\n  initializeBlogs\n};\nconst BlogList = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BlogsListView)\n);\nexport default BlogList;\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async credential => {\r\n  const response = await axios.post(baseUrl, credential);\r\n  let user = response.data;\r\n  // user = JSON.parse(user);\r\n  //window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n  return user;\r\n};\r\n\r\nexport default { login };\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nlet token = null\r\nconst setToken = newToken => { \r\n   token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll}","export const userConstants = {\r\n  LOGIN_REQUEST: \"USERS_LOGIN_REQUEST\",\r\n  LOGIN_SUCCESS: \"USERS_LOGIN_SUCCESS\",\r\n  LOGIN_FAILURE: \"USERS_LOGIN_FAILURE\",\r\n\r\n  LOGOUT: \"USERS_LOGOUT\",\r\n  GETALL_REQUEST: \"USERS_GETALL_REQUEST\",\r\n  GETALL_SUCCESS: \"USERS_GETALL_SUCCESS\",\r\n  GETALL_FAILURE: \"USERS_GETALL_FAILURE\"\r\n};\r\n","import loginService from \"../services/login\";\r\nimport userService from \"../services/users\"\r\nimport { userConstants } from \"./userConstant\";\r\n\r\nlet user = JSON.parse(localStorage.getItem(\"loggedUser\"));\r\nconst initialState = user ? user : null;\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  //console.log('from login reducer',action.type,action.data)\r\n  switch (action.type) {\r\n    \r\n    case userConstants.LOGIN_REQUEST:\r\n      console.log(\"from login success\", action.loggedUser);\r\n      if (action.data.loggedUser)\r\n        window.localStorage.setItem(\r\n          \"loggedUser\",\r\n          JSON.stringify(action.data.loggedUser)\r\n        );\r\n      return action.data.loggedUser;\r\n    case userConstants.LOGIN_SUCCESS:\r\n      console.log(\"from login success\", action.loggedUser);\r\n      if (action.data.loggedUser)\r\n        window.localStorage.setItem(\r\n          \"loggedUser\",\r\n          JSON.stringify(action.data.loggedUser)\r\n        );\r\n      return action.data.loggedUser;\r\n    case userConstants.LOGIN_FAILURE:\r\n      return {};\r\n    case userConstants.LOGOUT:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const logIn = user => {\r\n  return async dispatch => {\r\n    const loggedUser = await loginService.login(user);\r\n    dispatch({\r\n      type: userConstants.LOGIN_SUCCESS,\r\n      data: { loggedUser }\r\n    });\r\n  };\r\n};\r\nexport const logOut = () => {\r\n  window.localStorage.clear(\"loggedUser\");\r\n  return { type: userConstants.LOGOUT, data: null };\r\n};\r\n\r\n\r\n\r\nexport default loginReducer;\r\n","import React,{useState,useImperativeHandle} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n   Button\r\n} from 'react-bootstrap'\r\nconst Togglable=React.forwardRef((props, ref)=>{\r\n  const[visible,setVisible]=useState(false)\r\n\r\n  \r\n  const hideWhenVisible = { display: visible ?'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' :'none' }\r\n    \r\n    const toggleVisibility=()=>{\r\n        setVisible(!visible)\r\n    }\r\n useImperativeHandle(ref, () => {    \r\n       return {\r\n              toggleVisibility   \r\n               }  \r\n    })\r\n    return(\r\n       \r\n    <div>\r\n     {}\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility}>{props.buttonLable}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children} <Button onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n    )\r\n})\r\n\r\nTogglable.propTypes ={\r\n  buttonLable: PropTypes.string.isRequired\r\n}\r\nexport default Togglable","import React from \"react\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { logIn } from \"../reducers/loginReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nimport Togglable from \"./Togglable\";\r\n\r\nconst LoginForm = props => {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const username = event.target.username.value;\r\n      const password = event.target.password.value;\r\n      // console.log(username,password)\r\n      await props.logIn({\r\n        username,\r\n        password\r\n      });\r\n      //set the token into browser local storage\r\n      const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\r\n      if (loggedUserJSON) {\r\n        const user = JSON.parse(loggedUserJSON);\r\n        blogService.setToken(user.token);\r\n      }\r\n      history.replace(from);\r\n    } catch (exception) {\r\n      props.setNotification(\"UserName or Password Wrong\", 10);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <Togglable buttonLable=\"Log In\">\r\n        <h2>Login</h2>\r\n        <Form onSubmit={handleLogin}>\r\n          <Form.Group>\r\n            <Form.Label>username</Form.Label>\r\n            <Form.Control type=\"text\" name=\"username\" />\r\n\r\n            <Form.Label>password</Form.Label>\r\n            <Form.Control\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n            />\r\n            <Button type=\"submit\">login</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </Togglable>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToDispatch = {\r\n  logIn,\r\n  setNotification\r\n};\r\nexport default connect(null, mapStateToDispatch)(LoginForm);\r\n","import React from \"react\";\nimport \"../App.css\";\nimport { Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nconst Notification = props => {\n  if (props.message === null) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Alert variant=\"success\">{props.message}</Alert>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    message: state.notification\n  };\n};\n\nexport default connect(mapStateToProps)(Notification);\n","import userService from \"../services/users\";\r\nimport { userConstants } from \"./userConstant\";\r\nconst usersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.GETALL_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case userConstants.GETALL_SUCCESS:\r\n      return {\r\n        items: action.users\r\n      };\r\n    case userConstants.GETALL_FAILURE:\r\n      return {\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getAll = () => {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    userService.getAll().then(\r\n      users => dispatch(success(users)),\r\n      error => dispatch(failure(error.toString()))\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.GETALL_REQUEST };\r\n  }\r\n  function success(users) {\r\n    return { type: userConstants.GETALL_SUCCESS, users };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.GETALL_FAILURE, error };\r\n  }\r\n};\r\nexport default usersReducer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { Badge, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from \"react-bootstrap\";\r\n\r\nimport { getAll } from \"../reducers/usersReducer\";\r\n//import Blog from \"./Blog\";\r\nconst Users = props => {\r\n  //if (!props.users.items) return null;\r\n  const user = props.user;\r\n  const users = props.users;\r\n  const [activeKey, setActiveKey] = useState(\"0\");\r\n  useEffect(() => {\r\n    if (props.user !== null) {\r\n      const fetchData = async () => {\r\n        await props.getAll();\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n    //console.log(\"from effect\");\r\n    //props.initializeBlogs();\r\n  }, []);\r\n\r\n  const userById = id => {\r\n    const a = users.items.find(a => a.id === id);\r\n    return a;\r\n  };\r\n\r\n  const setActiveKeyOnSelect = actKey => {\r\n    //actKey.preventDefault();\r\n    console.log(actKey);\r\n    if (actKey === activeKey) actKey = -1;\r\n    setActiveKey(actKey);\r\n  };\r\n  return (\r\n    <div className=\"col-bg-6 col-md-offset-3\">\r\n      <h1>Hi {user.name}!</h1>\r\n      <p>You're logged in with React!!</p>\r\n      <h3>All registered users:</h3>\r\n      {users.loading && <em>Loading users...</em>}\r\n      {users.error && <span className=\"text-danger\">ERROR: {users.error}</span>}\r\n      {users.items && (\r\n        <div>\r\n          <Accordion activeKey={activeKey}>\r\n            {users.items.map((u, index) => (\r\n              <Card\r\n                key={u.id}\r\n                eventKey={index}\r\n                onClick={() => {\r\n                  setActiveKeyOnSelect(index);\r\n                }}\r\n              >\r\n                <Accordion.Toggle as={Card.Header}>\r\n                  <Link to={`/users/${u.id}`}>{u.name} </Link> ---------- Blogs:{\" \"}\r\n                  <Badge varian=\"light\">{u.blogs.length}</Badge>\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey={index}>\r\n                  <Card.Body>\r\n                    <Route\r\n                      exact\r\n                      path=\"/users/:id\"\r\n                      render={({ match }) => (\r\n                        <User user={userById(match.params.id)} />\r\n                      )}\r\n                    />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            ))}\r\n          </Accordion>\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/login\">Logout</Link>\r\n    </div>\r\n  );\r\n};\r\nconst CustomToggle = ({ props, eventKey }) => {\r\n  const currentActiveKey = eventKey;\r\n  return (\r\n    <Accordion.Toggle\r\n      as={Card.Header}\r\n      className={eventKey === currentActiveKey ? \"active\" : \"\"}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nconst User = props => {\r\n  const history = useHistory();\r\n  //props.history.push(\"/users\");\r\n  const user = props.user;\r\n  const blogById = id => {\r\n    //console.log(\"from blog by id \", id);\r\n    const a = user.blogs.find(a => a.id === id);\r\n    //console.log(\"from blogbyid\", a);\r\n    return a;\r\n  };\r\n  return (\r\n    <Card>\r\n      <Card.Header> {user.username} </Card.Header>\r\n      <Card.Subtitle className=\"mb-4 text-muted\">\r\n        <strong>Blogs of {user.username}</strong>\r\n      </Card.Subtitle>\r\n      <ListGroup className=\"list-group-flush\">\r\n        {user.blogs.map(u => (\r\n          <ListGroupItem key={u.id}>{u.title}</ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n      <Card.Footer>no. of blogs created:{user.blogs.length}</Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n//const User = withRouter(UserHis);\r\n/*const BlogHist = props => {\r\n  props.history.push(\"/protected/blogs\");\r\n  const blog = props.blog;\r\n  return (\r\n    <div>\r\n      <strong>{blog.title}</strong>\r\n      <br />\r\n      <em>{blog.author}</em>\r\n      {blog.likes}\r\n      {blog.url}\r\n    </div>\r\n  );\r\n};\r\nconst Blog = withRouter(BlogHist);*/\r\nconst mapState = state => {\r\n  return {\r\n    user: state.user,\r\n    users: state.users\r\n  };\r\n};\r\n\r\nconst actionCreators = {\r\n  getAll\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(Users);\r\n","import React from \"react\";\r\n\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { createBlog } from \"../reducers/blogsReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nconst BlogForm1 = props => {\r\n  const addBlog = async e => {\r\n    const nblog = {\r\n      title: e.target.title.value,\r\n      author: e.target.author.value,\r\n      url: e.target.url.value\r\n    };\r\n    try {\r\n      await props.createBlog(nblog);\r\n      props.setNotification(`new blog ${nblog.title} added`, 10);\r\n    } catch (expp) {\r\n      console.log(expp.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    /*<div>\r\n      <Form onSubmit={addBlog}>\r\n        <InputGroup size=\"bg\" className=\"mb-5\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"inputGroup-sizing-bg\">Title</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n\r\n          <FormControl\r\n            aria-label=\"Small\"\r\n            aria-describedby=\"inputGroup-sizing-sm\"\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Create\r\n          </Button>\r\n        </InputGroup>\r\n      </Form>\r\n    </div>*/\r\n    <Form onSubmit={addBlog}>\r\n      <Form.Group>\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter the Title\" />\r\n\r\n        <Form.Label> Author</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"author\"\r\n          placeholder=\"Enter The Author\"\r\n        />\r\n\r\n        <Form.Label>URL</Form.Label>\r\n\r\n        <Form.Control type=\"text\" name=\"url\" placeholder=\"Enter url\" />\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Create\r\n        </Button>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createBlog,\r\n  setNotification\r\n};\r\nconst BlogForm = withRouter(connect(null, mapDispatchToProps)(BlogForm1));\r\nexport default BlogForm;\r\n","import React, { useEffect, useRef } from \"react\";\n\nimport { Button, Tabs, Tab, Navbar, NavItem, NavLink } from \"react-bootstrap\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n  useHistory\n} from \"react-router-dom\";\n\nimport { NavbarBrand } from \"react-bootstrap\";\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\n\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\n\nimport BlogsList from \"./components/BlogsList\";\nimport LoginForm from \"./components/LoginForm\";\nimport Notificaton from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\nimport Users from \"./components/Users\";\nimport BlogForm from \"./components/blogForm\";\nimport { logIn, logOut } from \"./reducers/loginReducer\";\nimport { setNotification } from \"./reducers/notificationReducer\";\nimport blogService from \"./services/blogs\";\n\nconst App = props => {\n  const blogFormRef = React.createRef();\n\n  //Return token of usere from local storage\n  useEffect(() => {\n    try {\n      const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON);\n        blogService.setToken(user.token);\n      }\n    } catch (exp) {\n      console.log(exp.message);\n    }\n  }, []);\n\n  //log Out handler\n  const logOut = () => {\n    console.log(\"from logout\");\n    const preUser = props.user;\n    window.localStorage.clear();\n    props.logOut();\n    props.setNotification(`${preUser.name} has logged Out`);\n    //loginForm()\n    setTimeout(() => {\n      props.setNotification(null);\n    }, 5000);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Notificaton message={props.message} />\n        <Navbar\n          className=\"navbar navbar-expand navbar-dark\"\n          bg=\"dark\"\n          expand=\"lg\"\n        >\n          <Navbar.Brand text=\"Blog List Application\">\n            Blog List Application\n          </Navbar.Brand>\n          <Navbar.Collapse class=\"collapse navbar-collapse\">\n            <NavItem className=\"nav-item\">\n              <a className=\"nav-link\">\n                <Link to=\"/\">Home Page</Link>\n              </a>\n            </NavItem>\n            <NavItem className=\"nav-item\">\n              <a className=\"nav-link\">\n                <Link to=\"/blogs\">Blogs</Link>\n              </a>\n            </NavItem>\n            <NavItem className=\"nav-item\">\n              <a className=\"nav-link\">\n                <Link to=\"/users\">Users</Link>\n              </a>\n            </NavItem>\n\n            <ul className=\"nav navbar-nav navbar-right\">\n              <NavItem className=\"nav-item  ustify-content-end\">\n                <Navbar.Text>\n                  <span className=\"glyphicon glyphicon-log-in\"></span>{\" \"}\n                  <AuthButton user={props.user} logout={logOut} />\n                </Navbar.Text>\n              </NavItem>\n            </ul>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <div>\n                <h1>Blog List Application</h1>\n              </div>\n            )}\n          ></Route>\n          <Route exact path=\"/login\">\n            <LoginForm />\n          </Route>\n          <PrivateRoute user={props.user} path=\"/blogs\">\n            <Togglable buttonLable=\"Create Blog\" ref={blogFormRef}>\n              <BlogForm />\n            </Togglable>\n            <BlogsList />\n          </PrivateRoute>\n          <Route path=\"/blogs\"></Route>\n          <PrivateRoute user={props.user} path=\"/\">\n            <Users />\n          </PrivateRoute>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nconst User = () => {\n  /* let history = useHistory();\n  let location = useLocation();\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  const handleClick = () => {\n    console.log(\"hello from user\");\n    history.replace(from);\n  };*/\n  return (\n    <div>\n      <Button>Back to home</Button>\n      <p>users</p>\n    </div>\n  );\n};\nconst AuthButton = ({ user, logout }) => {\n  let history = useHistory();\n\n  return user !== null ? (\n    <p>\n      Welcome!{user.name}\n      <Button\n        onClick={() => {\n          logout();\n          history.push(\"/\");\n        }}\n      >\n        Sign out\n      </Button>\n    </p>\n  ) : (\n    <div>\n      <p>You are not logged in.</p>\n    </div>\n  );\n};\n\nconst PrivateRoute = ({ user, children, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user !== null ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    message: state.notification,\n    user: state.user\n  };\n};\nconst mapDispatchToProps = {\n  setNotification,\n  logIn,\n  logOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blogReducer from \"./reducers/blogsReducer\";\r\nimport notificaionReducer from \"./reducers/notificationReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificaionReducer,\r\n  user: loginReducer,\r\n  users: usersReducer\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n//import * as serviceWorker from './serviceWorker';\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n/*\nif (module.hot) {\n  module.hot.accept();\n}*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}
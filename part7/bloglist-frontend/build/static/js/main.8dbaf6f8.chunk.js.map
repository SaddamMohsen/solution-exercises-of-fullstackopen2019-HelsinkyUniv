{"version":3,"sources":["services/blogs.js","reducers/blogsReducer.js","reducers/notificationReducer.js","components/Blog.js","components/BlogsList.js","services/login.js","reducers/userConstant.js","reducers/loginReducer.js","components/Togglable.js","components/LoginForm.js","components/Notification.js","services/users.js","reducers/usersReducer.js","components/Users.js","components/blogForm.js","App.js","store.js","index.js"],"names":["token","blogs","getAll","axios","get","then","response","data","setToken","newToken","concat","addNewBlog","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","console","log","post","sent","abrupt","stop","_x","apply","this","arguments","addLike","_ref2","_callee2","id","respo","_context2","put","_x2","_x3","removeBlog","_ref3","_callee3","resp","_context3","delete","status","_x4","blogsReducer","state","length","undefined","action","type","loading","items","nblog","map","anecs","likedBlog","filter","st","failure","addNotification","message","setNotification","timeToShow","dispatch","setTimeout","notificationReducer","Blog","withRouter","props","blog","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","history","useHistory","from","useLocation","pathname","react_default","createElement","Card","style","width","Body","Title","title","Subtitle","className","author","Text","Link","href","url","Button","onClick","push","handleLikeBtn","Badge","variant","likes","creatore","handleRemoveBtn","ListGroup","comments","u","ListGroupItem","key","Form","inline","onSubmit","e","preventDefault","target","comment","value","addComment","FormControl","placeholder","name","font-size","mapDispatchToProps","blogService","_ref4","_callee4","_context4","initializeBlogs","success","error","BlogList","connect","ownProps","user","location","activeKey","setActiveKey","blg","useEffect","fetchData","changedBlog","find","b","objectSpread","blogId","_ref5","isCreator","username","role","failur","Accordion","index","Toggle","as","Header","eventKey","actKey","react_router_dom","to","position","right","Collapse","react_router","exact","path","render","_ref6","match","components_Blog","params","services_login","login","credential","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","JSON","parse","localStorage","getItem","initialState","logIn","loggedUser","loginService","loginReducer","window","setItem","stringify","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLable","children","mapStateToDispatch","handleLogin","event","password","loggedUserJSON","replace","t0","components_Togglable","Group","Label","Control","notification","Alert","services_users","usersReducer","users","User","Footer","actionCreators","userService","toString","height","varian","Users_User","createBlog","addBlog","AuthButton","logout","PrivateRoute","rest","objectWithoutProperties","assign","logOut","clear","blogFormRef","createRef","exp","margin","components_Notification","Navbar","defineProperty","collapseOnSelect","expand","bg","Brand","aria-controls","Nav","padding","App_AuthButton","preUser","components_LoginForm","App_PrivateRoute","blogForm","BlogsList","components_Users","reducer","combineReducers","blogReducer","notificaionReducer","store","createStore","applyMiddleware","thunk","subscribe","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8dbaf6f8.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\n\nlet token = null;\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst addNewBlog = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  };\n   console.log('from add blog service',newObject)\n  const response = await axios.post(baseUrl, newObject, config);\n   console.log('after respons',response.data)\n  return response.data;\n};\n\nconst addLike = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log(\"from service\", newObject);\n  const respo = await axios.put(`${baseUrl}/${id}`, newObject, config);\n  return respo.data;\n};\n\nconst removeBlog = async id => {\n  const resp = await axios.delete(`${baseUrl}/${id}`);\n  return resp.status;\n};\nexport default { getAll, setToken, addNewBlog, addLike, removeBlog };\n","import blogService from \"../services/blogs\";\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n  //console.log(\"from reduce\", action.type, action.data);\r\n  switch (action.type) {\r\n    case \"INIT_BLOGS\":\r\n      return {\r\n        loading: true\r\n      };\r\n    case \"GETBLOG_SUCCESS\":\r\n      return {\r\n        items: action.blogs\r\n      };\r\n    case \"ADD_BLOG\":\r\n      return state.concat(action.data.nblog);\r\n    case \"ADD_LIKE\":\r\n      //console.log(\"states from add like\", state);\r\n      //console.log(action.data.likedBlog);\r\n      return state.items.map(anecs =>\r\n        anecs.id !== action.data.likedBlog.id ? anecs : action.data.likedBlog\r\n      );\r\n    case \"ADD_COMMENT\":\r\n      return state.items.map(anecs =>\r\n        anecs.id !== action.data.likedBlog.id ? anecs : action.data.likedBlog\r\n      );\r\n    case \"DEL_BLOG\":\r\n      return state.items.filter(st => st.id !== action.data.id);\r\n    case \"GETALL_FAILURE\":\r\n      return {\r\n        failure: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const initializeBlogs = () => {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    blogService.getAll().then(\r\n      blogs => dispatch(success(blogs)),\r\n      error => dispatch(failure(error))\r\n    );\r\n    function request() {\r\n      return { type: \"INIT_BLOGS\" };\r\n    }\r\n    function success(blogs) {\r\n      return { type: \"GETBLOG_SUCCESS\", blogs };\r\n    }\r\n    function failure(error) {\r\n      return { type: \"GETALL_FAILURE\", error };\r\n    }\r\n  };\r\n};\r\n\r\nexport const createBlog = blog => {\r\n  return async dispatch => {\r\n    const nblog = await blogService.addNewBlog(blog);\r\n    dispatch({\r\n      type: \"ADD_BLOG\",\r\n      data: { nblog }\r\n    });\r\n  };\r\n};\r\n\r\nexport const addLike = blog => {\r\n  return async dispatch => {\r\n    const likedBlog = await blogService.addLike(blog.id, blog);\r\n    dispatch({\r\n      type: \"ADD_LIKE\",\r\n      data: { likedBlog }\r\n    });\r\n  };\r\n};\r\nexport const addComment =(id,comment) => {\r\n  console.log(\"from comment Dispatch\", comment);\r\n  return async dispatch => {\r\n    const likedBlog = await blogService.addLike(id, {comments:comment});\r\n    dispatch({\r\n      type: \"ADD_COMMENT\",\r\n      data: { likedBlog }\r\n    });\r\n  };\r\n};\r\nexport const removeBlog = id => {\r\n  return async dispatch => {\r\n    const delBlog = await blogService.removeBlog(id);\r\n    dispatch({\r\n      type: \"DEL_BLOG\",\r\n      data: { id }\r\n    });\r\n  };\r\n};\r\n\r\nexport default blogsReducer;\r\n","const initialState = null;\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_NOTIFICATION\":\r\n      return action.message;\r\n    case \"REMOVE_NOTIFICATION\":\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const addNotification = message => {\r\n  return {\r\n    type: \"ADD_NOTIFICATION\",\r\n    message\r\n  };\r\n};\r\nexport const removeNotification = () => {\r\n  return {\r\n    type: \"REMOVE_NOTIFICATION\",\r\n    message: \"\"\r\n  };\r\n};\r\nexport const setNotification = (message, timeToShow) => {\r\n  return async dispatch => {\r\n    dispatch(addNotification(message));\r\n    setTimeout(() => dispatch(removeNotification()), timeToShow * 1000);\r\n  };\r\n};\r\nexport default notificationReducer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport {\r\n  FormControl,\r\n  Form,\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\n\r\nimport { withRouter, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n/*var style = { color: \"#ffaaaa\" };\r\nvar max_Char = \"140\";\r\nvar Teaxtarea = React.createClass({\r\n  getInitialState: function() {\r\n    return { value: \"Controlled!!!\", char_Left: max_Char };\r\n  },\r\n  handleChange: function(event) {\r\n    var input = event.target.value;\r\n    this.setState({ value: input });\r\n  },\r\n  render: function() {\r\n    return (\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"comments\">\r\n            Comments <span style={style}>*</span>\r\n          </label>\r\n          (<span>{this.state.char_Left}</span> characters left)\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={this.state.value}\r\n            maxLength={max_Char}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n});*/\r\nconst BlogView = props => {\r\n  const blog = props.blog;\r\n  const [show, setShow] = useState(true);\r\n  const [comment, setComment] = useState();\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/blogs\" } };\r\n  //const showName = { display: show ? \"none\" : \"\" };\r\n  //const showAll = { display: show ? \"\" : \"none\" };\r\n  /*const toggleVisibility = () => {\r\n    setShow(!show);\r\n  };*/\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.comment.value, blog.id);\r\n    props.addComment(blog.id, e.target.comment.value);\r\n    //history.push(from);\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"50rem\" }}>\r\n      <Card.Body>\r\n        <Card.Title>{blog.title} </Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">{blog.author}</Card.Subtitle>\r\n        <Card.Text>{blog.title}</Card.Text>\r\n        <Card.Link href={blog.url}>{blog.url}</Card.Link>\r\n        <br />\r\n        <Button\r\n          onClick={() => {\r\n            history.push(from);\r\n            props.handleLikeBtn(blog.id);\r\n          }}\r\n        >\r\n          Like{\" \"}\r\n        </Button>\r\n        like <Badge variant=\"light\">{blog.likes}</Badge>\r\n        {props.creatore && (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(from);\r\n              props.handleRemoveBtn(blog.id);\r\n            }}\r\n          >\r\n            Remove\r\n          </Button>\r\n        )}\r\n        <ListGroup className=\"list-group-flush\">\r\n          {blog.comments.map(u => (\r\n            <ListGroupItem key={u.comments}>{u.comments}</ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n        <Form inline onSubmit={handleSubmit}>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Enter Comment Here!\"\r\n            className=\" sm-4\"\r\n            name=\"comment\"\r\n          />\r\n\r\n          <button\r\n            className=\"btn btn-default btn-lg btn-link\"\r\n            style={{ \"font-size\": \"36px\" }}\r\n          >\r\n            <span className=\"glyphicon glyphicon-comment\"></span>\r\n          </button>\r\n          <span className=\"badge badge-notify\">4</span>\r\n\r\n          <Button type=\"submit\">Submit</Button>\r\n          <Form.Text className=\"text-muted\">\r\n            You'll never get delete this\r\n          </Form.Text>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nconst Blog = withRouter(BlogView);\r\nexport default Blog;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  Route,\n  Link,\n  useHistory,\n  useLocation,\n  withRouter\n} from \"react-router-dom\";\n\nimport { Accordion, Card, Badge } from \"react-bootstrap\";\n\nimport {\n  addLike,\n  removeBlog,\n  initializeBlogs,\n  addComment\n} from \"../reducers/blogsReducer\";\nimport { setNotification } from \"../reducers/notificationReducer\";\n\nimport Blog from \"./Blog\";\n\nconst BlogsListView = props => {\n  let history = useHistory();\n  let location = useLocation();\n  const [activeKey, setActiveKey] = useState(\"0\");\n  let { from } = location.state || { from: { pathname: \"/blogs\" } };\n  let blg = props.blogs ? props.blogs : { items: [] };\n  /* blg = props.items.sort((a, b) =>\n    a.likes < b.likes ? 1 : b.likes < a.likes ? -1 : 0\n  );*/\n\n  useEffect(() => {\n    if (props.user !== null) {\n      if (!blg.items) {\n        const fetchData = async () => {\n          await props.initializeBlogs();\n        };\n        fetchData();\n      }\n    }\n  }, []);\n\n  const handleLikeBtn = async id => {\n    let blog = blg.items.find(b => b.id === id);\n    const changedBlog = { ...blog, likes: blog.likes + 1 };\n    await props.addLike(changedBlog);\n    props.setNotification(`you liked ${blog.title}`, 5);\n    setActiveKey(-1);\n    props.initializeBlogs();\n  };\n\n  const handleRemoveBtn = async blogId => {\n    let blog = blg.items.find(b => b.id === blogId);\n    //console.log(blogId, \"from remove btn\");\n    await props.removeBlog(blogId);\n    props.setNotification(`you remove ${blog.title}`, 5);\n    //history.push(from);\n    props.initializeBlogs();\n  };\n\n  const addComment = async (blogId, comment) => {\n    await props.addComment(blogId, comment);\n\n    props.initializeBlogs();\n    //console.log(\"from add comment\", blog);\n  };\n\n  const blogById = id => {\n    //console.log(blg);\n    let blog = blg.items.find(b => b.id === id);\n    return blog;\n  };\n  const isCreator = id => {\n    let blog = blg.items.find(b => b.id === id);\n    return props.user.username === blog.user[0].username;\n  };\n  //set the active menu\n  const setActiveKeyOnSelect = actKey => {\n    //actKey.preventDefault();\n    // console.log(actKey);\n    if (actKey === activeKey) {\n      actKey = -1;\n      history.push(from);\n    }\n\n    setActiveKey(actKey);\n  };\n  return (\n    <div>\n      {props.blogs.loading && (\n        <div className=\"spinner-border text-primary\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      )}\n      {props.blogs.failur && (\n        <span className=\"text-danger\">ERROR: {props.blogs.error}</span>\n      )}\n      {props.blogs.items && (\n        <div>\n          <Accordion activeKey={activeKey}>\n            {props.blogs.items.map((blog, index) => (\n              <Card key={blog.id}>\n                <Accordion.Toggle\n                  as={Card.Header}\n                  eventKey={index}\n                  onClick={() => {\n                    setActiveKeyOnSelect(index);\n                  }}\n                >\n                  <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                  <span\n                    className=\"badge badge-primary\"\n                    style={{\n                      position: \"absolute\",\n                      right: \"90px\"\n                    }}\n                  >\n                    {blog.likes}\n                  </span>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={index}>\n                  <Card.Body>\n                    <Route\n                      exact\n                      path=\"/blogs/:id\"\n                      render={({ match }) => (\n                        <Blog\n                          blog={blogById(match.params.id)}\n                          handleLikeBtn={handleLikeBtn}\n                          handleRemoveBtn={handleRemoveBtn}\n                          addComment={addComment}\n                          creatore={isCreator(match.params.id)}\n                        />\n                      )}\n                    />\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            ))}\n          </Accordion>\n        </div>\n      )}\n    </div>\n  );\n}; //end of blog list component\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  };\n};\nconst mapDispatchToProps = {\n  addLike,\n  removeBlog,\n  setNotification,\n  initializeBlogs,\n  addComment\n};\nconst BlogList = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BlogsListView)\n);\nexport default BlogList;\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/login\";\r\n\r\nconst login = async credential => {\r\n  const response = await axios.post(baseUrl, credential);\r\n  let user = response.data;\r\n  // user = JSON.parse(user);\r\n  //window.localStorage.setItem(\"loggedUser\", JSON.stringify(user));\r\n  return user;\r\n};\r\n\r\nexport default { login };\r\n","export const userConstants = {\r\n  LOGIN_REQUEST: \"USERS_LOGIN_REQUEST\",\r\n  LOGIN_SUCCESS: \"USERS_LOGIN_SUCCESS\",\r\n  LOGIN_FAILURE: \"USERS_LOGIN_FAILURE\",\r\n\r\n  LOGOUT: \"USERS_LOGOUT\",\r\n  GETALL_REQUEST: \"USERS_GETALL_REQUEST\",\r\n  GETALL_SUCCESS: \"USERS_GETALL_SUCCESS\",\r\n  GETALL_FAILURE: \"USERS_GETALL_FAILURE\"\r\n};\r\n","import loginService from \"../services/login\";\r\n\r\nimport { userConstants } from \"./userConstant\";\r\n\r\nlet user = JSON.parse(localStorage.getItem(\"loggedUser\"));\r\nconst initialState = user ? user : null;\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  //console.log('from login reducer',action.type,action.data)\r\n  switch (action.type) {\r\n    \r\n    case userConstants.LOGIN_REQUEST:\r\n      //console.log(\"from login success\", action.loggedUser);\r\n      if (action.data.loggedUser)\r\n        window.localStorage.setItem(\r\n          \"loggedUser\",\r\n          JSON.stringify(action.data.loggedUser)\r\n        );\r\n      return action.data.loggedUser;\r\n    case userConstants.LOGIN_SUCCESS:\r\n      console.log(\"from login success\", action.loggedUser);\r\n      if (action.data.loggedUser)\r\n        window.localStorage.setItem(\r\n          \"loggedUser\",\r\n          JSON.stringify(action.data.loggedUser)\r\n        );\r\n      return action.data.loggedUser;\r\n    case userConstants.LOGIN_FAILURE:\r\n      return {};\r\n    case userConstants.LOGOUT:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const logIn = user => {\r\n  return async dispatch => {\r\n    const loggedUser = await loginService.login(user);\r\n    dispatch({\r\n      type: userConstants.LOGIN_SUCCESS,\r\n      data: { loggedUser }\r\n    });\r\n  };\r\n};\r\nexport const logOut = () => {\r\n  window.localStorage.clear(\"loggedUser\");\r\n  return { type: userConstants.LOGOUT, data: null };\r\n};\r\n\r\n\r\n\r\nexport default loginReducer;\r\n","import React,{useState,useImperativeHandle} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n   Button\r\n} from 'react-bootstrap'\r\nconst Togglable=React.forwardRef((props, ref)=>{\r\n  const[visible,setVisible]=useState(false)\r\n\r\n  \r\n  const hideWhenVisible = { display: visible ?'none' : '' }\r\n    const showWhenVisible = { display: visible ? '' :'none' }\r\n    \r\n    const toggleVisibility=()=>{\r\n        setVisible(!visible)\r\n    }\r\n useImperativeHandle(ref, () => {    \r\n       return {\r\n              toggleVisibility   \r\n               }  \r\n    })\r\n    return(\r\n       \r\n    <div>\r\n     {}\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility}>{props.buttonLable}</Button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children} <Button onClick={toggleVisibility}>cancel</Button>\r\n      </div>\r\n    </div>\r\n    )\r\n})\r\n\r\nTogglable.propTypes ={\r\n  buttonLable: PropTypes.string.isRequired\r\n}\r\nexport default Togglable","import React from \"react\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { logIn } from \"../reducers/loginReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nimport blogService from \"../services/blogs\";\r\n\r\nimport Togglable from \"./Togglable\";\r\n\r\nconst LoginForm = props => {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const handleLogin = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const username = event.target.username.value;\r\n      const password = event.target.password.value;\r\n      // console.log(username,password)\r\n      await props.logIn({\r\n        username,\r\n        password\r\n      });\r\n      //set the token into browser local storage\r\n      const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\r\n      if (loggedUserJSON) {\r\n        const user = JSON.parse(loggedUserJSON);\r\n        blogService.setToken(user.token);\r\n      }\r\n      history.replace(from);\r\n    } catch (exception) {\r\n      props.setNotification(\"UserName or Password Wrong\", 10);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <Togglable buttonLable=\"Log In\">\r\n        <h2>Login</h2>\r\n        <Form onSubmit={handleLogin}>\r\n          <Form.Group>\r\n            <Form.Label>username</Form.Label>\r\n            <Form.Control type=\"text\" name=\"username\" />\r\n\r\n            <Form.Label>password</Form.Label>\r\n            <Form.Control\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n            />\r\n            <Button type=\"submit\">login</Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </Togglable>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToDispatch = {\r\n  logIn,\r\n  setNotification\r\n};\r\nexport default connect(null, mapStateToDispatch)(LoginForm);\r\n","import React from \"react\";\nimport \"../App.css\";\nimport { Alert } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nconst Notification = props => {\n  if (props.message === null) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Alert variant=\"success\">{props.message}</Alert>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    message: state.notification\n  };\n};\n\nexport default connect(mapStateToProps)(Notification);\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nlet token = null\r\nconst setToken = newToken => { \r\n   token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll}","import userService from \"../services/users\";\r\nimport { userConstants } from \"./userConstant\";\r\nconst usersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.GETALL_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case userConstants.GETALL_SUCCESS:\r\n      return {\r\n        items: action.users\r\n      };\r\n    case userConstants.GETALL_FAILURE:\r\n      return {\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getAll = () => {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    userService.getAll().then(\r\n      users => dispatch(success(users)),\r\n      error => dispatch(failure(error.toString()))\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.GETALL_REQUEST };\r\n  }\r\n  function success(users) {\r\n    return { type: userConstants.GETALL_SUCCESS, users };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.GETALL_FAILURE, error };\r\n  }\r\n};\r\nexport default usersReducer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Route, Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { Badge, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nimport { getAll } from \"../reducers/usersReducer\";\r\n//import Blog from \"./Blog\";\r\nconst Users = props => {\r\n  const user = props.user;\r\n  const users = props.users;\r\n  const [activeKey, setActiveKey] = useState(\"0\");\r\n  useEffect(() => {\r\n    if (props.user !== null) {\r\n      const fetchData = async () => {\r\n        await props.getAll();\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const userById = id => {\r\n    const a = users.items.find(a => a.id === id);\r\n    return a;\r\n  };\r\n\r\n  const setActiveKeyOnSelect = actKey => {\r\n    if (actKey === activeKey) actKey = -1;\r\n    setActiveKey(actKey);\r\n  };\r\n  return (\r\n    <div className=\"col-bg-6 col-md-offset-3\">\r\n      <h1>Hi {user.name}!</h1>\r\n      <p>You're logged in with React!!</p>\r\n      <h3>All registered users:</h3>\r\n      {users.loading && (\r\n        <div\r\n          className=\"spinner-border\"\r\n          style={{ width: \"3rem\", height: \"3rem\" }}\r\n          role=\"status\"\r\n        >\r\n          <span className=\"sr-only\">Loading Users...</span>\r\n        </div>\r\n      )}\r\n      {users.error && <span className=\"text-danger\">ERROR: {users.error}</span>}\r\n      {users.items && (\r\n        <div>\r\n          <Accordion activeKey={activeKey}>\r\n            {users.items.map((u, index) => (\r\n              <Card\r\n                key={u.id}\r\n                eventKey={index}\r\n                onClick={() => {\r\n                  setActiveKeyOnSelect(index);\r\n                }}\r\n              >\r\n                <Accordion.Toggle as={Card.Header}>\r\n                  <Link to={`/users/${u.id}`}>{u.name} </Link> ---------- Blogs:{\" \"}\r\n                  <Badge varian=\"light\">{u.blogs.length}</Badge>\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey={index}>\r\n                  <Card.Body>\r\n                    <Route\r\n                      exact\r\n                      path=\"/users/:id\"\r\n                      render={({ match }) => (\r\n                        <User user={userById(match.params.id)} />\r\n                      )}\r\n                    />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            ))}\r\n          </Accordion>\r\n        </div>\r\n      )}\r\n\r\n      <Link to=\"/login\">Logout</Link>\r\n    </div>\r\n  );\r\n};\r\nconst User = props => {\r\n  const history = useHistory();\r\n  //props.history.push(\"/users\");\r\n  const user = props.user;\r\n  const blogById = id => {\r\n    //console.log(\"from blog by id \", id);\r\n    const a = user.blogs.find(a => a.id === id);\r\n    //console.log(\"from blogbyid\", a);\r\n    return a;\r\n  };\r\n  return (\r\n    <Card>\r\n      <Card.Header> {user.username} </Card.Header>\r\n      <Card.Subtitle className=\"mb-4 text-muted\">\r\n        <strong>Blogs of {user.username}</strong>\r\n      </Card.Subtitle>\r\n      <ListGroup className=\"list-group-flush\">\r\n        {user.blogs.map(u => (\r\n          <ListGroupItem key={u.id}>{u.title}</ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n      <Card.Footer>no. of blogs created:{user.blogs.length}</Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n//const User = withRouter(UserHis);\r\n/*const BlogHist = props => {\r\n  props.history.push(\"/protected/blogs\");\r\n  const blog = props.blog;\r\n  return (\r\n    <div>\r\n      <strong>{blog.title}</strong>\r\n      <br />\r\n      <em>{blog.author}</em>\r\n      {blog.likes}\r\n      {blog.url}\r\n    </div>\r\n  );\r\n};\r\nconst Blog = withRouter(BlogHist);*/\r\nconst mapState = state => {\r\n  return {\r\n    user: state.user,\r\n    users: state.users\r\n  };\r\n};\r\n\r\nconst actionCreators = {\r\n  getAll\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(Users);\r\n","import React from \"react\";\r\n\r\nimport { Form, Button, FormControl } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { createBlog } from \"../reducers/blogsReducer\";\r\nimport { setNotification } from \"../reducers/notificationReducer\";\r\nconst BlogForm = props => {\r\n  const addBlog = async e => {\r\n    const nblog = {\r\n      title: e.target.title.value,\r\n      author: e.target.author.value,\r\n      url: e.target.url.value\r\n    };\r\n    console.log(nblog);\r\n    try {\r\n      console.log(nblog);\r\n      await props.createBlog(nblog);\r\n\r\n      props.setNotification(`new blog ${nblog.title} added`, 10);\r\n      //props.history.push(\"/\");\r\n    } catch (expp) {\r\n      props.setNotification(`An Error has occured${expp.message}`, 10);\r\n      console.log(expp.message);\r\n      //props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={addBlog}>\r\n      <Form.Group>\r\n        <Form.Label>Title</Form.Label>\r\n        <FormControl type=\"text\" name=\"title\" placeholder=\"Enter the Title\" />\r\n        <Form.Label> Author</Form.Label>\r\n        <FormControl type=\"text\" name=\"author\" placeholder=\"Enter The Author\" />\r\n        <Form.Label>URL</Form.Label>\r\n        <FormControl type=\"text\" name=\"url\" placeholder=\"Enter url\" />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n          Create\r\n        </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createBlog,\r\n  setNotification\r\n};\r\n//const BlogForm = withRouter(connect(null, mapDispatchToProps)(BlogForm1));\r\nexport default connect(null, mapDispatchToProps)(BlogForm);\r\n","import React, { useEffect } from \"react\";\n\nimport { Button, Navbar, Nav } from \"react-bootstrap\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n  useHistory\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\n\nimport BlogsList from \"./components/BlogsList\";\nimport LoginForm from \"./components/LoginForm\";\nimport Notificaton from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\nimport Users from \"./components/Users\";\nimport BlogForm from \"./components/blogForm\";\nimport { logIn, logOut } from \"./reducers/loginReducer\";\nimport { setNotification } from \"./reducers/notificationReducer\";\nimport blogService from \"./services/blogs\";\n\nconst App = props => {\n  const blogFormRef = React.createRef();\n\n  //Return token of usere from local storage\n  useEffect(() => {\n    try {\n      const loggedUserJSON = window.localStorage.getItem(\"loggedUser\");\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON);\n        blogService.setToken(user.token);\n      }\n    } catch (exp) {\n      console.log(exp.message);\n    }\n  }, []);\n\n  //log Out handler\n  const logOut = () => {\n    console.log(\"from logout\");\n    const preUser = props.user;\n    window.localStorage.clear();\n    props.logOut();\n    props.setNotification(`${preUser.name} has logged Out`);\n    //loginForm()\n    setTimeout(() => {\n      props.setNotification(null);\n    }, 5000);\n  };\n\n  return (\n    <Router>\n      <div\n        className=\"container\"\n        style={{ height: \"100%\", margin: \"0px 0px 0px 10px auto\" }}\n      >\n        <Notificaton message={props.message} />\n        <Navbar\n          collapseOnSelect\n          expand=\"lg\"\n          bg=\"light\"\n          variant=\"light\"\n          expand=\"lg\"\n        >\n          <Navbar.Brand href=\"/\">Blog List Application</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link to=\"/\" style={{ padding: 30 }}>\n                Home Page\n              </Link>\n              <Link to=\"/blogs\" style={{ padding: 30 }}>\n                Blogs\n              </Link>\n              <Link to=\"/users\" style={{ padding: 30 }}>\n                Users\n              </Link>\n            </Nav>\n          </Navbar.Collapse>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>\n              Signed in as: <AuthButton user={props.user} logout={logOut} />\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar>\n        {/* <Navbar\n          className=\"navbar navbar-expand navbar-dark\"\n          bg=\"dark\"\n          expand=\"lg\"\n        >\n          <Navbar.Brand text=\"Blog List Application\">\n            Blog List Application\n          </Navbar.Brand>\n          <Navbar.Collapse className=\"collapse navbar-collapse\">\n            <NavItem className=\"nav-item\">\n              <NavLink to=\"/\">Home Page</NavLink>\n            </NavItem>\n            <NavItem className=\"nav-item\">\n              <Link to=\"/blogs\">Blogs</Link>\n            </NavItem>\n            <NavItem className=\"nav-item\">\n              <Link to=\"/users\">Users</Link>\n            </NavItem>\n\n            <ul className=\"nav navbar-nav navbar-right\">\n              <NavItem className=\"nav-item  justify-content-end\">\n                <Navbar.Text>\n                  <span className=\"glyphicon glyphicon-log-in\"></span>{\" \"}\n                  <AuthButton user={props.user} logout={logOut} />\n                </Navbar.Text>\n              </NavItem>\n            </ul>\n          </Navbar.Collapse>\n        </Navbar>*/}\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <div>\n                <h1>Blog List Application</h1>\n              </div>\n            )}\n          ></Route>\n          <Route exact path=\"/login\">\n            <LoginForm />\n          </Route>\n          <PrivateRoute user={props.user} path=\"/blogs\">\n            <Togglable buttonLable=\"Create Blog\" ref={blogFormRef}>\n              <BlogForm />\n            </Togglable>\n            <BlogsList />\n          </PrivateRoute>\n          <Route path=\"/blogs\"></Route>\n          <PrivateRoute user={props.user} path=\"/\">\n            <Users />\n          </PrivateRoute>\n        </Switch>\n      </div>\n      {\n        // <Footer />\n      }\n    </Router>\n  );\n};\n\nconst User = () => {\n  /* let history = useHistory();\n  let location = useLocation();\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  const handleClick = () => {\n    console.log(\"hello from user\");\n    history.replace(from);\n  };*/\n  return (\n    <div>\n      <Button>Back to home</Button>\n      <p>users</p>\n    </div>\n  );\n};\nconst AuthButton = ({ user, logout }) => {\n  let history = useHistory();\n\n  return user !== null ? (\n    <span>\n      !{user.name}\n      <Button\n        onClick={() => {\n          logout();\n          history.push(\"/\");\n        }}\n      >\n        Sign out\n      </Button>\n    </span>\n  ) : (\n    <div>\n      <p>You are not logged in.</p>\n    </div>\n  );\n};\n\nconst PrivateRoute = ({ user, children, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user !== null ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nconst Footer = () => {\n  const style = {\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\",\n    //\"justify-content\": \"bottom\",\n    height: \"10%\",\n    display: \"inline\",\n    //position: \"relative\",\n    \"background-color\": \"transparent\",\n    \"text-align\": \"center\",\n    color: \"black\",\n    \"border-left\": \"50px solid transparent\",\n    \"border-right\": \"50px solid transparent\",\n    \"border-bottom\": \"50px solid beige\"\n  };\n  return (\n    <div style={style}>\n      <p>\n        <strong>Blog List Application</strong>\n        <br />\n        <em> Created By Developer Saddam Mohsen(c) 2020</em>\n        <br />\n        <a href=\"https://github.com/SaddamMohsen\">Saddam Mohsen on GithuB</a>\n      </p>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    message: state.notification,\n    user: state.user\n  };\n};\nconst mapDispatchToProps = {\n  setNotification,\n  logIn,\n  logOut\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blogReducer from \"./reducers/blogsReducer\";\r\nimport notificaionReducer from \"./reducers/notificationReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificaionReducer,\r\n  user: loginReducer,\r\n  users: usersReducer\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n//import * as serviceWorker from './serviceWorker';\n\nstore.subscribe(() => {\n  // console.log(store.getState());\n});\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n/*\nif (module.hot) {\n  module.hot.accept();\n}*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}